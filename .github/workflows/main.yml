name: React TypeScript CI/CD with SSH Deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '21.7.1'  #Specify the Node.js version you want to use

    - name: Set up environment variables
      run: |
        #echo "CI=false" >> $GITHUB_ENV
        echo "REACT_APP_API_BASE_URL=${{ secrets.REACT_APP_API_BASE_URL }}" >> $GITHUB_ENV
        ls -l && pwd

    - name: Install dependencies and build
      run: |
        npm install
        npm run build


    - name: Zip & Rsync
      run: |
        ls -l && pwd
        # Wait for ongoing changes to finish (optional)
        sleep 5
        zip -r code.zip --exclude=*.git *
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem  # Store private key in key.pem
        chmod 400 key.pem
        ls -l
        rsync -avzrp -e "ssh -p 2244 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i key.pem" code.zip ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/tmp/

    - name: Deploy to Ubuntu server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 2244
        script: |
          ls -l && pwd
          # tar -cvzf code.tar.gz ./* --exclude=.git/*
          # # Create a temporary directory

          # # Sync the local repository to the temporary directory on the server
          # rsync -avz -e "ssh -p 2244" -o StrictHostKeyChecking=no" code.tar.gz ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/tmp/

          # # # Backup the previous deployment (optional, adjust path as needed)
          # # ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} -p 2244 "mv /var/www/html /var/www/html_backup_$(date +%Y%m%d_%H%M%S)"

          # # Move the synced repository to the deployment directory
          # ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} -p 2244 "mv $TMP_DIR /var/www/html"

          # # Clean up the temporary directory
          # ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} -p 2244 "rm -rf $TMP_DIR"
